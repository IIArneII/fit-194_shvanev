#include <iostream>
#include "stdlib.h"
#include "stdio.h"
#include "math.h"
#include "locale"
#include "fstream"
#include "time.h"
using namespace std;

void input2(int** a, int n, int m, int before, int sub);
void output2(int** a, int n, int m);
void transp(int** a, int n);
void transp2(int** a, int** b, int n, int m);
void summ2(int** a, int** b, int** c, int n, int m);
void multip2(int** a, int** b, int** c, int n, int m, int k);
void swap_line(int **a, int m, int n1, int n2);

int main()
{
	setlocale(LC_ALL, "Russian");
	srand(time(NULL));

	int choosee = -1;
	ifstream f;

	cout << "\tЛабораторная работа по языкам программирования\n\t\tВариант 9";
	while (choosee != 0)
	{
		cout << "\nВведите номер задания. Для выхода введите 0: ";
		cin >> choosee;

		if (choosee == 1)
		{
			//Задание 1: Транспонировать заданную матрицу А(N,N)

			int n, ** a;

			cout << "\nЗадание 1. Транспонировать заданную матрицу А(N,N)\nВведите N: ";
			cin >> n;
			a = new int* [n];
			for (int i = 0; i < n; i++)
			{
				a[i] = new int[n];
			}
			f.open("D:\\function\\task1.txt", ios::in);
			for (int i = 0; i < n; i++)
			{
				for (int j = 0; j < n; j++) f >> a[i][j];
			}
			f.close();
			cout << "Первоначальная матрица:\n";
			output2(a, n, n);
			transp(a, n);
			cout << "Транспонированная матрица:\n";
			output2(a, n, n);

			/*
			Ввод:		Первоначальная матрица: 
						8    3    4    7    6

						4    2    4    9    1

						1    4    3    5    2

						2    4    9    3    1

						6    4    8    3    0
			Вывод:		Транспонированная матрица:
						8    4    1    2    6

						3    2    4    4    4

						4    4    3    9    8

						7    9    5    3    3

						6    1    2    1    0
			Мой ответ:	Транспонированная матрица:				
						8    4    1    2    6

						3    2    4    4    4

						4    4    3    9    8

						7    9    5    3    3

						6    1    2    1    0
			*/
		}

		if (choosee == 2)
		{
			//Задание 2: Найти сумму двух матриц А(N,M) и В(N,M)

			int n, m, ** a, ** b, ** c;

			cout << "\nЗадание 2: Найти сумму двух матриц А(N,M) и В(N,M)\nВведите N: ";
			cin >> n;
			cout << "Введите M: ";
			cin >> m;
			a = new int* [n];
			for (int i = 0; i < n; i++)
			{
				a[i] = new int[m];
			}
			b = new int* [n];
			for (int i = 0; i < n; i++)
			{
				b[i] = new int[m];
			}
			c = new int* [n];
			for (int i = 0; i < n; i++)
			{
				c[i] = new int[m];
			}
			f.open("D:\\function\\task2.txt", ios::in);
			for (int i = 0; i < n; i++)
			{
				for (int j = 0; j < m; j++) f >> a[i][j];
			}
			for (int i = 0; i < n; i++)
			{
				for (int j = 0; j < m; j++) f >> b[i][j];
			}
			f.close();
			cout << "Матрица А:\n";
			output2(a, n, m);
			cout << "Матрица B:\n";
			output2(b, n, m);
			summ2(a, b, c, n, m);
			cout << "Сумма матриц:\n";
			output2(c, n, m);

			/*
			Ввод:		Марица 1:
						1    2    3    4    5    6

						7    8    9    1    2    3

						Матрица 2:
						3    5    4    7    8    9

						1    2    3    4    5    6
			Вывод:		Сумма матриц:
						4    7    7   11   13   15

						8   10   12    5    7    9
			Мой ответ:	Сумма матриц:
						4    7    7   11   13   15

						8   10   12    5    7    9
			*/
		}

		if (choosee == 3)
		{
			//Задание 3. Найти произведение двух матриц А(N,M) и В(M,K)

			int n, m, k, ** a, ** b, ** c;

			cout << "\nЗадание 3. Найти произведение двух матриц А(N,M) и В(M,K)\nВведите N: ";
			cin >> n;
			cout << "Введите M: ";
			cin >> m;
			cout << "Введите K: ";
			cin >> k;
			a = new int* [n];
			for (int i = 0; i < n; i++)
			{
				a[i] = new int[m];
			}
			b = new int* [m];
			for (int i = 0; i < m; i++)
			{
				b[i] = new int[k];
			}
			c = new int* [n];
			for (int i = 0; i < n; i++)
			{
				c[i] = new int[k];
			}
			f.open("D:\\function\\task3.txt", ios::in);
			for (int i = 0; i < n; i++)
			{
				for (int j = 0; j < m; j++) f >> a[i][j];
			}
			for (int i = 0; i < m; i++)
			{
				for (int j = 0; j < k; j++) f >> b[i][j];
			}
			f.close();
			cout << "Матрица А:\n";
			output2(a, n, m);
			cout << "Матрица B:\n";
			output2(b, m, k);
			multip2(a, b, c, n, m, k);
			cout << "Произведение матриц:\n";
			output2(c, n, k);

			/*
			Ввод:		Матрица 1:
						1    2    3    4    5    6

						7    8    9    1    2    3

						Матрица 2:
						3    1    2

						5    2    2

						4    3    3

						7    4    7

						8    5    1

						9    6    0

			Вывод:		Произведение:
						147   91   48

						147   82   66

			Мой ответ:	Произведение:
						147   91   48

						147   82   66
			*/
		}

		if (choosee == 4)
		{
			//Задание 4. Найти произведение матрицы А(N, M) на вектор В(N)

			int n, m, k = 1, ** a, ** b, **c;

			cout << "\nЗадание 4. Найти произведение матрицы А(N, M) на вектор В(N)\nВведите N: ";
			cin >> n;
			cout << "Введите M: ";
			cin >> m;
			a = new int* [n];
			for (int i = 0; i < n; i++)
			{
				a[i] = new int[m];
			}
			b = new int* [m];
			for (int i = 0; i < m; i++)
			{
				b[i] = new int[k];
			}
			c = new int* [n];
			for (int i = 0; i < n; i++)
			{
				c[i] = new int[k];
			}
			f.open("D:\\function\\task4.txt", ios::in);
			for (int i = 0; i < n; i++)
			{
				for (int j = 0; j < m; j++) f >> a[i][j];
			}
			for (int i = 0; i < m; i++)
			{
				for (int j = 0; j < k; j++) f >> b[i][j];
			}
			f.close();
			cout << "Матрица А:\n";
			output2(a, n, m);
			cout << "Вектор B:\n";
			output2(b, m, k);
			multip2(a, b, c, n, m, k);
			cout << "Произведение матрицы и вектора:\n";
			output2(c, n, k);

			/*
			Ввод:		Матрица:
						1    2    3    4    5    6

						7    8    9    1    2    3

						Вектор:
						9

						8

						7

						6

						5

						4

			Вывод:		Произведение матрицы и вектора:
						119

						218

			Мой ответ:	Произведение матрицы и вектора:
						119

						218
			*/
		}

		if (choosee == 5)
		{
			//Задание 5. В матрице А(N,M): а - Найти количество отрицательных элементов строк, которые содержат хотя бы один нулевой элемент
			//b - Переставить местами строки, содержащие первый и последний максимальные элементы соответственно

			int** a, n, m, num = 0, max1, max2, line1, line2;

			cout << "\nЗадание 5. В матрице А(N,M):\nа - Найти количество отрицательных элементов строк, которые содержат хотя бы один нулевой элемент\nВведите N: ";
			cin >> n;
			cout << "Введите M: ";
			cin >> m;
			a = new int* [n];
			for (int i = 0; i < n; i++)
			{
				a[i] = new int[m];
			}
			f.open("D:\\function\\task5.txt", ios::in);
			for (int i = 0; i < n; i++)
			{
				for (int j = 0; j < m; j++) f >> a[i][j];
			}
			for (int i = 0; i < n; i++)
			{
				int j = -1;
				do
				{
					j++;
					if (a[i][j] == 0)
					{
						for (int tempj = 0; tempj < m; tempj++)
						{
							if (a[i][tempj] < 0) num++;
						}
					}
				} while (a[i][j] != 0 && j < m);
			}
			cout << "\nМатрица A:\n";
			output2(a, n, m);
			cout << "Количество отрицательных элементов: " << num << endl;
			cout << "\nb - Переставить местами строки, содержащие первый и последний максимальные элементы соответственно\n";
			max1 = a[0][0];
			max2 = a[0][0];
			line1 = 0;
			line2 = 0;
			for (int i = 0; i < n; i++)
			{
				for (int j = 0; j < n; j++)
				{
					if (a[i][j] >= max1)
					{
						max2 = max1;
						line2 = line1;
						max1 = a[i][j];
						line1 = i;
					}
				}
			}
			swap_line(a, m, line1, line2);
			cout << "Измененная матрица:\n";
			output2(a, n, m);

			/*
			Ввод:		Первоначальная матрица:
					   -8    3    4    7    6    0

						4    2   -4    9    1   -2

						1    4    0   -5    8   -8

						2   -4    9    3   -1    4

						6    4    7    3    0    2

			Вывод:		a - Количество отрицательных элементов: 3
						b - Измененная матрица:
					   -8    3    4    7    6    0

						2   -4    9    3   -1    4

						1    4    0   -5    8   -8

						4    2   -4    9    1   -2

						6    4    7    3    0    2

			Мой ответ:	a - Количество отрицательных элементов: 3
						b - Измененная матрица:
					   -8    3    4    7    6    0

						2   -4    9    3   -1    4

						1    4    0   -5    8   -8

						4    2   -4    9    1   -2

						6    4    7    3    0    2






			Ввод:		Первоначальная матрица:
					    8    3    4    7    6    0

						4    2   -4    9    1   -2

						1    4    0   -5    8   -8

						2   -4    9    3   -1    4

						6    4    7    3    0    2

			Вывод:		a - Количество отрицательных элементов: 2
						b - Измененная матрица:
						8    3    0    7    6    0

						4    2   -4    8    1   -2

						2   -4    9    3   -1    4

						1    4    0   -5    8   -8

						6    4    7    3    0    2

			Мой ответ:	a - Количество отрицательных элементов: 2
						b - Измененная матрица:
						8    3    0    7    6    0

						4    2   -4    8    1   -2

						2   -4    9    3   -1    4

						1    4    0   -5    8   -8

						6    4    7    3    0    2
			*/
		}

		if (choosee == 6)
		{
			int** a, ** b, n, m;

			cout << "Задание 6. Транспонировать матрицу в другую матрицу\nВведите N: ";
			cin >> n;
			cout << "Введите M: ";
			cin >> m;
			a = new int* [n];
			for (int i = 0; i < n; i++)
			{
				a[i] = new int[m];
			}
			b = new int* [m];
			for (int i = 0; i < m; i++)
			{
				b[i] = new int[n];
			}
			cout << "\nПервоначальная матрица:\n";
			input2(a, n, m, -10, 10);
			output2(a, n, m);
			cout << "Транспанированная:\n";
			transp2(a, b, n, m);
			output2(b, m, n);

			/*
			Ввод:		Первоначальная матрица:
						-5    6   -4    2

						 7    2    0    5

					    -7   -2    2   -3

			Вывод:		Транспонированная:
						-5    7   -7

						 6    2   -2

						-4    0    2

						 2    5   -3

			Мой ответ:	Транспонированная:
						-5    7   -7

						 6    2   -2

						-4    0    2

						 2    5   -3
			*/
		}
		
	}

	return 0;
}

void input2(int** a, int n, int m, int sub, int before)	//Заполняет матрицу случайными элементами. На вход подаются: матрица, количество строк, количество столбцов, нижняя граница, верхняя граница
{
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			a[i][j] = rand() % (before - sub + 1) + sub;
		}
	}
}

void output2(int** a, int n, int m)	//Выводит матрицу на экран. На вход подаются: матрица, количество строк, количество столбцов
{
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			printf("%5d", a[i][j]);
		}
		printf("\n\n");
	}
}

void transp(int** a, int n)	//Транспонирует квадратную матрицу. На вход подаются: матрица, количество строк и столбцов
{
	for (int i = 0; i < n - 1; i++)
	{
		for (int j = i + 1; j < n; j++)
		{
			swap(a[i][j], a[j][i]);
		}
	}
}

void summ2(int** a, int** b, int** c, int n, int m)	//Ссуммирует матрицы a и b и заносит результат в матрицу c. На вход подаются: матрица a, матрица b, матрица c, количество строк, количество столбцов
{
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			c[i][j] = a[i][j] + b[i][j];
		}
	}
}

void multip2(int** a, int** b, int** c, int n, int m, int k)	//Умножает матрицы a и b и заносит результат в матрицу c. На вход подаются: матрица a, матрица b, матрица c,
																//количество строк первой матрицы, количество столбцов первой и строк во второй, количество столбцов во второй
{
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < k; j++)
		{
			int s = 0;
			for (int tempij = 0; tempij < m; tempij++)
			{
				s = s + a[i][tempij] * b[tempij][j];
			}
			c[i][j] = s;
		}
	}
}

void swap_line(int** a, int m, int n1, int n2)	//Меняет местами строки матрицы. На вход подаются: матрица, количесвто столбцов, номер строки 1, номер строки 2
{
	for (int i = 0; i < m; i++)
	{
		swap(a[n1][i], a[n2][i]);
	}
}

void transp2(int** a, int** b, int n, int m)	//Транспонирует матрицу a в матрицу b. На вход подаются: матрица a, матрица b, количество строк матрицы a, количество столбцов матрицы a
{
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			b[j][i] = a[i][j];
		}
	}
}